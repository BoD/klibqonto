plugins {
    id 'org.jetbrains.kotlin.multiplatform' version '1.3.50'
}

apply plugin: 'maven-publish'

kotlin {
    jvm {
        compilations.main.kotlinOptions {
            // Setup the Kotlin compiler options for the 'main' compilation:
            jvmTarget = '1.8'
        }
    }
//    js {
//        browser {
//        }
//        nodejs {
//        }
//    }
    // For ARM, should be changed to iosArm32 or iosArm64
    // For Linux, should be changed to e.g. linuxX64
    // For MacOS, should be changed to e.g. macosX64
    // For Windows, should be changed to e.g. mingwX64
//    macosX64("macos") {
//        binaries {
//            framework {
//            }
//        }
//    }
    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin('stdlib-common')
            }
        }
        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }
        jvmMain {
            dependencies {
                implementation kotlin('stdlib-jdk8')
            }
        }
        jvmTest {
            dependencies {
                implementation kotlin('test')
                implementation kotlin('test-junit')
            }
        }
        jsMain {
            dependencies {
                implementation kotlin('stdlib-js')
            }
        }
        jsTest {
            dependencies {
                implementation kotlin('test-js')
            }
        }
        macosMain {
        }
        macosTest {
        }
    }
}

//// Create a Version.kt file and add it to the source set
//task generateSources {
//    def outputDir = file("$buildDir/generated/source/kotlin")
//    outputs.dir outputDir
//    doFirst {
//        def outputWithPackageDir = new File(outputDir, "org/jraf/klibqonto/internal/client")
//        outputWithPackageDir.mkdirs()
//        new File(outputWithPackageDir, "Version.kt").write("package org.jraf.klibqonto.internal.client\ninternal const val VERSION = \"$project.version\"")
//    }
//}
//compileKotlin.dependsOn generateSources
//compileKotlin.source += generateSources.outputs.files

